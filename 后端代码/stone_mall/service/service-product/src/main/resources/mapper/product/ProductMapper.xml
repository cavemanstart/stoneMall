<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.product.mapper.ProductMapper">
    <sql id="product_col">
        id,name,brand_id,category1_id,category2_id,category3_id,unit_name,slider_urls,spec_value,status,audit_status,audit_message,create_time,update_time,is_deleted
    </sql>
    <sql id="details_col">
        id,product_id,image_urls,create_time,update_time,is_deleted
    </sql>
    <select id="findProductSkuBySale" resultType="com.stone.model.entity.product.ProductSku">
        select
            sku.id,sku.sku_code,sku.sku_name,sku.product_id,sku.thumb_img,sku.sale_price,sku.market_price,sku.cost_price,sku.stock_num,sku.sale_num,sku.sku_spec,sku.weight,sku.volume,sku.status,sku.create_time,sku.update_time,sku.is_deleted
        from product_sku sku
                 left join product p on p.id = sku.product_id
        where
            p.status = 1
          and p.audit_status = 1
          and sku.is_deleted = 0
          and p.is_deleted = 0
        order by sku.sale_num desc
            limit 10
    </select>
    <select id="findByKeyWord" resultType="com.stone.model.entity.product.ProductSku">
        select
        sku.id,sku.sku_code,sku.sku_name,sku.product_id,sku.thumb_img,sku.sale_price,sku.market_price,sku.cost_price,sku.stock_num,sku.sale_num,sku.sku_spec,sku.weight,sku.volume,sku.status,sku.create_time,sku.update_time,sku.is_deleted
        from product_sku sku
        left join product p on p.id = sku.product_id
        <where>
            <if test="keyword != null and keyword != ''">
                and sku.sku_name like CONCAT('%',#{keyword},'%')
            </if>
            <if test="brandId != null">
                and p.brand_id = #{brandId}
            </if>
            <if test="category1Id != null">
                and p.category1_id = #{category1Id}
            </if>
            <if test="category2Id != null">
                and p.category2_id = #{category2Id}
            </if>
            <if test="category3Id != null">
                and p.category3_id = #{category3Id}
            </if>
            and p.status = 1
            and p.audit_status = 1
            and sku.is_deleted = 0
            and p.is_deleted = 0
        </where>
        order by
        <if test="order == 1">
             sku.sale_num desc
        </if>
        <if test="order == 2">
             sku.sale_price asc
        </if>
        <if test="order == 3">
            sku.sale_price desc
        </if>
    </select>

    <select id="getSkuBySkuId" resultType="com.stone.model.entity.product.ProductSku">
        select sku.id,sku.sku_code,sku.sku_name,sku.product_id,sku.thumb_img,sku.sale_price,sku.market_price,sku.cost_price,sku.stock_num,sku.sale_num,sku.sku_spec,sku.weight,sku.volume,sku.status,sku.create_time,sku.update_time,sku.is_deleted
        from product_sku sku
        where
        sku.id = #{skuId} and sku.is_deleted = 0
    </select>
    <select id="getProductById" resultType="com.stone.model.entity.product.Product">
        select <include refid="product_col"/> from product
        where id = #{productId} and is_deleted = 0
    </select>

    <select id="productSkuList" resultType="com.stone.model.entity.product.ProductSku">
        select sku.id,sku.sku_code,sku.sku_name,sku.product_id,sku.thumb_img,sku.sale_price,sku.market_price,sku.cost_price,sku.stock_num,sku.sale_num,sku.sku_spec,sku.weight,sku.volume,sku.status,sku.create_time,sku.update_time,sku.is_deleted
        from product_sku sku
        where sku.product_id = #{productId} and sku.is_deleted = 0
    </select>

    <select id="getDetailsById" resultType="com.stone.model.entity.product.ProductDetails">
        select <include refid="details_col"/> from product_details
        where product_id =#{productId} and is_deleted = 0
    </select>

    <update id="updateSale" >
        update product_sku set sale_num = sale_num + #{num}, stock_num = stock_num - #{num}, update_time =  now() where id = #{skuId}
    </update>
</mapper>